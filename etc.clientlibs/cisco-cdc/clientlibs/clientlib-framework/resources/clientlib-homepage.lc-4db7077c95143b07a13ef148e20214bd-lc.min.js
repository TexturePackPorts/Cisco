(self.webpackChunkcdcreimagine = self.webpackChunkcdcreimagine || []).push([["homepage"], {
    5956: (y,u)=>{
        "use strict";
        Object.defineProperty(u, "__esModule", {
            value: !0
        }),
        u.BLANK_URL = u.relativeFirstCharacters = u.urlSchemeRegex = u.ctrlCharactersRegex = u.htmlCtrlEntityRegex = u.htmlEntitiesRegex = u.invalidProtocolRegex = void 0,
        u.invalidProtocolRegex = /^([^\w]*)(javascript|data|vbscript)/im,
        u.htmlEntitiesRegex = /&#(\w+)(^\w|;)?/g,
        u.htmlCtrlEntityRegex = /&(newline|tab);/gi,
        u.ctrlCharactersRegex = /[\u0000-\u001F\u007F-\u009F\u2000-\u200D\uFEFF]/gim,
        u.urlSchemeRegex = /^.+(:|&colon;)/gim,
        u.relativeFirstCharacters = [".", "/"],
        u.BLANK_URL = "about:blank"
    }
    ,
    2605: (y,u,o)=>{
        "use strict";
        var d;
        d = {
            value: !0
        },
        u.J = void 0;
        var h = o(5956);
        function c(e) {
            return h.relativeFirstCharacters.indexOf(e[0]) > -1
        }
        function r(e) {
            var t = e.replace(h.ctrlCharactersRegex, "");
            return t.replace(h.htmlEntitiesRegex, function(s, i) {
                return String.fromCharCode(i)
            })
        }
        function a(e) {
            if (!e)
                return h.BLANK_URL;
            var t, s = e;
            do
                s = r(s).replace(h.htmlCtrlEntityRegex, "").replace(h.ctrlCharactersRegex, "").trim(),
                t = s.match(h.ctrlCharactersRegex) || s.match(h.htmlEntitiesRegex) || s.match(h.htmlCtrlEntityRegex);
            while (t && t.length > 0);
            var i = s;
            if (!i)
                return h.BLANK_URL;
            if (c(i))
                return i;
            var n = i.match(h.urlSchemeRegex);
            if (!n)
                return i;
            var l = n[0];
            return h.invalidProtocolRegex.test(l) ? h.BLANK_URL : i
        }
        u.J = a
    }
    ,
    8803: ()=>{
        document.addEventListener("DOMContentLoaded", ()=>{
            window.AOS.init()
        }
        )
    }
    ,
    7248: (y,u,o)=>{
        "use strict";
        o.d(u, {
            K: ()=>a
        });
        var d = o(5929);
        class h {
            #e;
            #t;
            #s(t, s) {
                for (let i = 0; i < this.#e.length; i++) {
                    let n = [];
                    for (const l of t)
                        for (const p of l.addedNodes)
                            if (p instanceof Element) {
                                const _ = Array.from(p.querySelectorAll(this.#e[i]));
                                n = n.concat(_)
                            }
                    for (const l of n)
                        new this.#t[i](l)
                }
            }
            constructor() {
                this.#e = [],
                this.#t = [];
                const t = window.MutationObserver
                  , s = document.body
                  , i = new t(this.#s.bind(this))
                  , n = {
                    subtree: !0,
                    childList: !0,
                    characterData: !0
                };
                i.observe(s, n)
            }
            addTarget(t) {
                this.#e.push(t.selector),
                this.#t.push(t.componentModule)
            }
        }
        const c = "mutationObserverHelper";
        let r = !1;
        const a = ()=>(d.F.getInstance(c) == null && !r && (r = !0,
        d.F.instance = {
            namespace: c,
            instance: new h
        }),
        d.F.getInstance(c))
    }
    ,
    2694: (y,u,o)=>{
        "use strict";
        o.d(u, {
            Q: ()=>r
        });
        var d = o(7248);
        const h = '[data-init-breadcrumb="true"]'
          , c = "data-init-breadcrumb";
        class r {
            vBreadCrumb;
            vBreadCrumbULHeight;
            static instantiate() {
                const e = {
                    selector: h,
                    componentModule: r
                }
                  , t = document.querySelectorAll(h);
                let s = (0,
                d.K)();
                s?.addTarget(e);
                for (const i of t) {
                    const n = new r(i)
                }
            }
            constructor(e) {
                this.vBreadCrumb = e,
                this.inIt(),
                this.vBreadCrumb.removeAttribute(c)
            }
            inIt = ()=>{
                const e = document.querySelector(".cmp-breadcrumb__list")
                  , t = window.getComputedStyle(e)
                  , s = document.querySelector(".cmp-breadcrumb__item:last-child");
                this.vBreadCrumbULHeight = parseInt(t.paddingTop) * 2 + s.offsetHeight,
                this.resizeObserver.observe(e)
            }
            ;
            nodeToHtml = e=>Array.prototype.reduce.call(e, function(t, s) {
                return t + (s.outerHTML || s.nodeValue)
            }, "");
            resizeObserver = new ResizeObserver(e=>{
                const t = document.querySelector(".cmp-breadcrumb__list")
                  , s = e[0].target.clientHeight
                  , i = window.matchMedia("(min-width: 1024px)");
                if (document.querySelector(".cmp-breadcrumb__dropdown")?.style.removeProperty("display"),
                s > this.vBreadCrumbULHeight && i.matches) {
                    var l = t.querySelectorAll("li")
                      , p = this.nodeToHtml([...l].slice(1, l.length - 2))
                      , _ = this.nodeToHtml([...l].slice(0, 1))
                      , m = this.nodeToHtml([...l].slice(l.length - 2, l.length))
                      , w = _ + "<div class='cmp-breadcrumb__container'><div class='cmp-breadcrumb__dropdown'>" + p + "</div><div class='cmp-breadcrumb__dots' tabindex='0'><span itemprop='dots'>...</span></div></div>" + m;
                    t.innerHTML = w;
                    const g = document.querySelector(".cmp-breadcrumb__dropdown");
                    g?.style.removeProperty("display");
                    const b = document.querySelector(".cmp-breadcrumb__dots");
                    b?.addEventListener("keydown", E=>{
                        const f = g?.querySelector("li a.active");
                        switch (E.key) {
                        case " ":
                        case "Enter":
                            E.preventDefault(),
                            f ? (f?.focus({
                                preventScroll: !0
                            }),
                            f?.classList.remove("active"),
                            f?.click()) : (g?.style.setProperty("display", "flex", "important"),
                            (g?.firstElementChild?.firstElementChild).classList.add("active"));
                            break;
                        case "Tab":
                        case "Escape":
                            g?.style.removeProperty("display"),
                            f?.classList.remove("active");
                            break;
                        case "ArrowUp":
                            E.preventDefault(),
                            f?.parentElement?.previousElementSibling && (f?.parentElement?.previousElementSibling?.firstElementChild?.classList.add("active"),
                            f?.classList.remove("active"));
                            break;
                        case "ArrowDown":
                            E.preventDefault(),
                            f?.parentElement?.nextElementSibling && (f?.parentElement?.nextElementSibling?.firstElementChild?.classList.add("active"),
                            f?.classList.remove("active"));
                            break
                        }
                    }
                    ),
                    b.addEventListener("blur", E=>{
                        const f = g?.querySelector("li a.active");
                        g?.style.removeProperty("display"),
                        f?.classList.remove("active")
                    }
                    , !0)
                }
            }
            )
        }
    }
    ,
    8914: (y,u,o)=>{
        "use strict";
        var d = o(3685)
          , h = o(2694);
        (0,
        d.t)(h.Q.instantiate)
    }
    ,
    7982: (y,u,o)=>{
        "use strict";
        o.d(u, {
            $: ()=>a
        });
        var d = o(188)
          , h = o(7248);
        const c = '[data-init-button="true"][data-isloginurl="true"]'
          , r = "data-init-button";
        class a {
            static instantiate() {
                const t = {
                    selector: c,
                    componentModule: a
                }
                  , s = document.querySelectorAll(c);
                let i = (0,
                h.K)();
                i?.addTarget(t);
                for (const n of s) {
                    const l = new a(n)
                }
            }
            constructor(t) {
                if (t.dataset.isloginurl) {
                    const s = `${d.U.LOGIN_PATH.get(d.U.CLOUD_KEY)}?referer=${window.location.pathname}`;
                    t.setAttribute("href", s),
                    t.removeAttribute(r)
                }
            }
        }
    }
    ,
    5447: (y,u,o)=>{
        "use strict";
        var d = o(3685)
          , h = o(7982);
        (0,
        d.t)(h.$.instantiate)
    }
    ,
    614: (y,u,o)=>{
        "use strict";
        o.d(u, {
            O: ()=>r
        });
        var d = o(7248);
        const h = '[data-init-elasticcontainer="true"][data-showmore="true"]'
          , c = "data-init-elasticcontainer";
        class r {
            config = {
                initialLoadItems: 0,
                clickShowMoreItems: 0,
                totalItems: 0,
                itemsToShow: 1,
                buttonWrapperClass: ".cds-c-elasticcontainer__showmore-wrap",
                showMoreButtonClass: ".cds-c-elasticcontainer__showmore-link",
                itemsContainerClass: ".cmp-container",
                showAllDataAttribute: "data-showall",
                hideItemsClassName: "cds-c-elasticcontainer--hide",
                hideItemsClass: ".cds-c-elasticcontainer--hide"
            };
            element;
            static instantiate() {
                const e = {
                    selector: h,
                    componentModule: r
                }
                  , t = document.querySelectorAll(h);
                let s = (0,
                d.K)();
                s?.addTarget(e);
                for (const i of t) {
                    const n = new r(i)
                }
            }
            constructor(e) {
                this.element = e;
                const t = this.element.querySelector(this.config.showMoreButtonClass);
                this.config.initialLoadItems = Number(this.element.dataset.initialShow),
                this.config.clickShowMoreItems = Number(this.element.dataset.clickShow),
                this.config.totalItems = this.element.querySelector(this.config.itemsContainerClass).children.length,
                this.element.dataset.showall == "true" && e.dataset.showall != null ? this.config.itemsToShow = this.config.totalItems : ((this.config.clickShowMoreItems == null || isNaN(this.config.clickShowMoreItems)) && (this.config.clickShowMoreItems = this.config.totalItems),
                this.config.itemsToShow = this.config.clickShowMoreItems),
                t !== null && (t.removeEventListener("keydown", this.handleShowMore.bind(this)),
                t.addEventListener("keydown", this.handleShowMore.bind(this)),
                t.removeEventListener("click", this.handleShowMore.bind(this)),
                t.addEventListener("click", this.handleShowMore.bind(this))),
                this.initialHideItems(),
                this.showItems(this.config.initialLoadItems, !1),
                this.element.removeAttribute(c)
            }
            initialHideItems() {
                const e = this.element.querySelector(this.config.itemsContainerClass).children;
                for (let t = 0; t < e.length; t++)
                    e[t].classList.add(this.config.hideItemsClassName)
            }
            showItems(e, t=!1) {
                let s = this.element.querySelectorAll(this.config.hideItemsClass);
                const i = e <= s.length ? e : s.length;
                if (i !== null) {
                    for (let n = 0; n < i; n++)
                        try {
                            s[n].classList.remove(this.config.hideItemsClassName)
                        } catch {}
                    if (t) {
                        const n = s[0].querySelector("a, button");
                        n && n.focus()
                    }
                    s = this.element.querySelectorAll(this.config.hideItemsClass),
                    s.length == 0 && this.element.querySelector(this.config.showMoreButtonClass).classList.add(this.config.hideItemsClassName)
                }
            }
            handleShowMore(e) {
                (e.key === "Enter" || e.key === " ") && (e.preventDefault(),
                this.showItems(this.config.itemsToShow, !0)),
                e.type === "click" && this.showItems(this.config.itemsToShow, !1)
            }
        }
    }
    ,
    2505: (y,u,o)=>{
        "use strict";
        var d = o(3685)
          , h = o(614);
        const c = window;
        (typeof c.Granite > "u" || typeof c.Granite.author > "u") && (0,
        d.t)(h.O.instantiate)
    }
    ,
    9178: ()=>{
        document.addEventListener("DOMContentLoaded", ()=>{
            document.querySelectorAll(".cds-c-showmore-container").forEach(o=>{
                new y(o)
            }
            )
        }
        );
        function y(u) {
            this.config = {
                contentClass: ".cds-c-showmore-container__content",
                showMoreButtonClass: ".cds-c-showmore-container__button",
                showText: "Show more",
                hideText: "Show less"
            },
            this.handleShowMore = ()=>{
                const o = u.querySelector(this.config.showMoreButtonClass);
                u.classList.toggle("cds-c-showmore-container--show"),
                o.innerHTML == this.config.showText ? o.innerHTML = this.config.hideText : o.innerHTML == this.config.hideText && (o.innerHTML = this.config.showText)
            }
            ,
            this.init = ()=>{
                const o = u.querySelector(this.config.showMoreButtonClass)
                  , d = u.querySelector(this.config.contentClass)
                  , h = d.getAttribute("data-show-text")
                  , c = d.getAttribute("data-hide-text");
                h !== null && (this.config.showText = h),
                c !== null && (this.config.hideText = c),
                o.innerHTML = this.config.showText,
                o !== null && o.addEventListener("click", this.handleShowMore)
            }
            ,
            this.init()
        }
    }
    ,
    168: (y,u,o)=>{
        "use strict";
        o.d(u, {
            w: ()=>h
        });
        var d = o(5675);
        class h extends d.b {
            #e = "aria-hidden";
            #t = null;
            constructor(r) {
                super(),
                this.#t = r
            }
            #s(r) {
                if (r.preventDefault(),
                typeof Optanon < "u" && typeof Optanon.ToggleInfoDisplay == "function")
                    Optanon.ToggleInfoDisplay();
                else {
                    const a = r.target
                      , e = this.#t.querySelector('a[href*="privacy-full.html"]');
                    e != null && (a.href = e.href + "#cookies",
                    a.setAttribute("data-config-metrics-title", "Consent Preferences - Footer"),
                    a.click())
                }
            }
            init() {
                if (this.#t != null) {
                    const r = this.#t.querySelectorAll("[aria-controls]");
                    for (const a of r)
                        a.addEventListener("click", e=>{
                            const t = e.target.closest(".fw-c-footer__links");
                            if (t != null) {
                                const s = t.querySelector(`[${this.#e}]`)
                                  , i = s.getAttribute(this.#e) === "true";
                                e.target.classList.toggle("--open"),
                                s.setAttribute(this.#e, !i)
                            }
                        }
                        );
                    window.cdc === void 0 && (window.cdc = {}),
                    cdc.elements = cdc.elements || {},
                    cdc.elements.footer = cdc.elements.footer || {},
                    cdc.elements.footer.self = this.#t
                }
            }
            setEventListeners() {
                this.rewriteRelativePath(this.#t),
                this.#t.querySelector(".fw-c-footer__copyright-year").innerText = new Date().getFullYear();
                const r = this.#t.querySelector('a[href*="ciscocx.qualtrics.com"]');
                if (r != null) {
                    const e = new URL(r.href);
                    e.searchParams.delete("Ref"),
                    e.searchParams.append("Ref", `${window.location.pathname}${window.location.search}`),
                    e.href != null && (r.href = e.toString(),
                    r.addEventListener("click", t=>(t.preventDefault(),
                    window.open(r.href, "feedback", "width=550, height=460, scrollbars=1, menubar=1, resizable=1"),
                    !1)))
                }
                const a = this.#t.querySelector("#privacy-manager");
                a?.addEventListener("click", this.#s.bind(this))
            }
        }
    }
    ,
    9352: (y,u,o)=>{
        "use strict";
        var d = o(168);
        const h = document.querySelector(".fw-c-footer")
          , c = new d.w(h);
        c.init(),
        document.addEventListener("DOMContentLoaded", ()=>{
            c.setEventListeners()
        }
        )
    }
    ,
    2657: (y,u,o)=>{
        "use strict";
        o.d(u, {
            K: ()=>c
        });
        var d = o(188)
          , h = o(9258);
        class c extends h.v {
            static DELAY = 200;
            static TYPEAHEAD_RESULT_SELECTOR = "fw-c-search__typeahead-result";
            typeaheadUri = "https://search.cisco.com";
            #e;
            get typeaheadResults() {
                return this.results
            }
            set typeaheadResults(a) {
                const e = []
                  , t = i=>{
                    const n = {};
                    n.typeaheadId = i.typeaheadid,
                    n.category = i._source.category,
                    n.categoryvalue = i._source.categoryvalue,
                    i._source.category === "DeepQA" ? n.submitText = i._source.categoryvalue + " : " + i._source.displaytext : n.submitText = i._source.displaytext,
                    n.displaytext = i._source.displaytext,
                    i._source.categoryvalue === "" ? e.push(n) : this.results.push(n)
                }
                  , s = i=>{
                    for (const n of i)
                        t(n),
                        n.inner_hits && s(n.inner_hits)
                }
                ;
                this.results = [],
                a != null && a.hasOwnProperty("response") && a.response.hasOwnProperty("hits") && a.response.hits.length > 0 && (s(a.response.hits),
                this.results = e.concat(this.results))
            }
            connectedCallback() {
                super.connectedCallback();
                const a = this.querySelector(".fw-c-search__form")
                  , e = this.querySelector(".fw-c-search__attribute.--locale");
                if (this.querySelector(".fw-c-search__form-button.--speech-to-text") != null && o.e("search/stt").then(o.bind(o, 9706)).then(({SpeechToText: t})=>{
                    this.#e = new t(this),
                    this.#e.setEventListeners()
                }
                ),
                e != null) {
                    const t = d.U.locale
                      , s = t[1] === "uk" ? "gb" : t[1];
                    e.value = t[0] + s.toUpperCase()
                }
                switch (d.U.env) {
                case "stage":
                case "dev":
                    const t = "https://cdcsearch-stage.cisco.com";
                    this.typeaheadUri = t,
                    a.action = t;
                    break;
                default:
                    break
                }
                this.typeaheadUri += "/api/v1.0/get_deepqa_typeaheads"
            }
            setEventListeners() {
                super.setEventListeners();
                const a = this.querySelector(".fw-c-search__form-phrase")
                  , e = Array.from(this.querySelectorAll(".fw-c-search__form-button"))
                  , t = e.find(n=>n.classList.contains("--submit"))
                  , s = e.find(n=>n.classList.contains("--speech-to-text"))
                  , i = this.closest(".fw-c-header__dropdown").querySelector(".fw-c-header__dropdown-close-button");
                this.addEventListener("keydown", n=>{
                    n.code === "Escape" && a.value.trim() === "" && (i?.click(),
                    this.#e != null && s != null && s.classList.contains("--active") && this.#e.cancel())
                }
                ),
                a.addEventListener("keydown", this.phraseKeydownHandler.bind(this)),
                t.addEventListener("click", this.submitSearch.bind(this)),
                t.addEventListener("keydown", n=>{
                    (n.code === "Enter" || n.code == "Space") && this.submitSearch(n)
                }
                )
            }
            phraseKeydownHandler(a) {
                a.code === "Tab" && a.shiftKey && this.closest(".fw-c-header").querySelector(".fw-c-header__button.--search").focus()
            }
            submitSearch(a) {
                const e = this.querySelector(".fw-c-search__form")
                  , t = this.querySelector(".fw-c-search__form-phrase");
                e.mode.value !== "voice" && (this.typeaheadIndex === -1 || e.classList.contains("--focus") ? (e.autosuggest.value = "false",
                e.cat.value = "",
                e.categoryvalue.value = "",
                e.clktyp.value = "enter",
                e.mode.value = "text") : (t.value = this.typeaheadResults[this.typeaheadIndex].submitText,
                e.autosuggest.value = "true",
                e.cat.value = this.typeaheadResults[this.typeaheadIndex].category,
                e.categoryvalue.value = this.typeaheadResults[this.typeaheadIndex].categoryvalue,
                e.clktyp.value = "click",
                e.mode.value = "text")),
                t.value.length > 0 && (t.value = t.value.trim(),
                this.submitSearchAction(a))
            }
            submitSearchAction(a) {
                this.querySelector(".fw-c-search__form").submit()
            }
            closeComponent() {
                super.closeComponent();
                const a = this.closest(".fw-c-header").querySelector(".fw-c-header__button.--search");
                a == null && a.focus()
            }
            typeaheadBuild() {
                const a = this.querySelector("#" + this.id + "__typeahead-list-template").content.cloneNode(!0)
                  , e = this.querySelector("#" + this.id + "__typeahead-group-template").content
                  , t = this.querySelector("#" + this.id + "__typeahead-categorized-heading-template").content
                  , s = this.querySelector("#" + this.id + "__typeahead-result-template").content
                  , i = b=>b.replace(/</gi, "&lt;").replace(/>/gi, "&gt;")
                  , n = ()=>{
                    _ !== "" && (p = t.cloneNode(!0),
                    p.querySelector("span").textContent = _,
                    m.querySelector("li").prepend(p)),
                    a.querySelector("ul").append(m),
                    m = e.cloneNode(!0)
                }
                  , l = new RegExp("([^%]|^){1}(" + i(this.querySelector(".fw-c-search__form-phrase").value.trim()) + "){1}","gi");
                let p = null
                  , _ = null
                  , m = e.cloneNode(!0)
                  , w = null
                  , g = 0;
                for (const b of this.typeaheadResults)
                    _ != null && _ !== b.categoryvalue && n(),
                    w = s.cloneNode(!0).firstElementChild,
                    w.id = w.id.replace(/#/, g),
                    w.querySelector("span").innerHTML = decodeURI(i(b.displaytext).replace(l, '$1<span class="fw-c-search__typeahead-query-match">$2</span>')),
                    m.querySelector("ul").ariaLabel = b.categoryvalue,
                    m.querySelector("ul").append(w),
                    _ = b.categoryvalue,
                    g++;
                return this.results.length > 0 && n(),
                a
            }
            typeaheadClick(a) {
                this.typeaheadBlur(),
                this.submitSearch(a)
            }
            typeaheadMetrics() {
                const a = this.querySelector(".fw-c-search__form")
                  , e = {
                    ev: "typeahead",
                    AuS: "true",
                    KeyW: this.typeaheadResults[this.typeaheadIndex].submitText,
                    Input: this.initialQuery,
                    Cat: this.typeaheadResults[this.typeaheadIndex].category,
                    Mode: "text",
                    Pr: a.locale.value,
                    categoryvalue: this.typeaheadResults[this.typeaheadIndex].categoryvalue,
                    tareqid: a.tareqid.value
                };
                typeof trackEvent !== void 0 && trackEvent.event("link", e)
            }
        }
    }
    ,
    1134: (y,u,o)=>{
        "use strict";
        var d = o(2657);
        document.addEventListener("DOMContentLoaded", ()=>{
            window.customElements.get("cdc-global-search") || window.customElements.define("cdc-global-search", d.K, {
                extends: "section"
            })
        }
        )
    }
    ,
    9809: (y,u,o)=>{
        "use strict";
        o.d(u, {
            $: ()=>h
        });
        var d = o(5675);
        class h extends d.b {
            nav;
            header;
            initialized;
            #e() {
                const r = this.header.querySelector(".cmp-accordion__button--expanded");
                r?.click()
            }
            #t(r) {
                if (r.classList.contains("--close")) {
                    this.#e();
                    const a = this.header.querySelector(".fw-c-header__nav-button");
                    a?.click()
                } else if (r.classList.contains("--back")) {
                    const a = r.closest(".cmp-tabs__tabpanel")
                      , e = r.closest(".cmp-accordion__panel");
                    if (a != null) {
                        const t = a.getAttribute("aria-labelledby")
                          , s = this.nav.querySelector("#" + t);
                        s != null && (a.classList.remove("cmp-tabs__tabpanel--active"),
                        a.setAttribute("aria-hidden", !0),
                        s.classList.remove("cmp-tabs__tab--active"),
                        s.setAttribute("aria-selected", !1),
                        s.setAttribute("tabindex", "-1"),
                        s.focus())
                    } else
                        e != null && this.#e()
                }
            }
            #s() {
                this.nav.querySelectorAll(".fw-c-header__nav-controls").forEach(a=>{
                    const e = a.closest(".cmp-tabs__tabpanel")
                      , t = a.closest(".cmp-accordion__panel");
                    if (e != null) {
                        const s = this.nav.querySelector("#" + e.getAttribute("aria-labelledby"));
                        a.querySelector(".fw-c-header__nav-controls-label").textContent = s.textContent
                    } else if (t != null) {
                        const s = this.nav.querySelector("#" + t.getAttribute("aria-labelledby"));
                        a.querySelector(".fw-c-header__nav-controls-label").textContent = s.querySelector(".cmp-accordion__title").textContent
                    }
                }
                )
            }
            #r() {
                this.nav = this.nav.renderRoot || this.nav
            }
            #a() {
                this.#r(),
                this.nav.addEventListener("keydown", a=>{
                    if (a.keyCode === 27 && this.#e(),
                    a.target === this.nav.querySelector(".headerhome"))
                        a.keyCode === 9 && !a.shiftKey && (this.mq(this.breakpoints.venti) || (a.preventDefault(),
                        this.nav.querySelectorAll(".cmp-tabs__tab")[0].focus()));
                    else if (a.target === this.nav.querySelector(".fw-c-header__nav-controls-button.--back") && a.keyCode === 9 && a.shiftKey && !this.mq(this.breakpoints.grande)) {
                        const e = this.nav.querySelectorAll(".cmp-tabs__tab");
                        e[e.length].focus()
                    }
                }
                );
                const r = this.nav.querySelector(".fw-c-header__dropdown-close-button");
                r != null && (r.addEventListener("click", a=>{
                    this.#e()
                }
                ),
                r.addEventListener("keydown", a=>{
                    a.keyCode === 13 && (a.preventDefault(),
                    this.#e()),
                    a.code === "Tab" && !a.shiftKey && (a.preventDefault(),
                    r.click(),
                    this.accessibilityHandler(r))
                }
                )),
                this.nav.querySelectorAll(".fw-c-header__nav-controls").forEach(a=>{
                    a.addEventListener("keydown", e=>{
                        (e.keyCode === 13 || e.keyCode === 32) && this.#t(e.target)
                    }
                    ),
                    a.addEventListener("click", e=>{
                        let t = e.target.tagName === "BUTTON" ? e.target : e.target.closest("button");
                        t != null && this.#t(t)
                    }
                    )
                }
                ),
                this.nav.querySelectorAll(".cmp-tabs__tab").forEach((a,e)=>{
                    a.addEventListener("focus", t=>{
                        e === 0 && this.mq(this.breakpoints.venti) && t.target.click(),
                        this.mq(this.breakpoints.grande) || t.preventDefault()
                    }
                    )
                }
                ),
                this.nav.querySelectorAll(".cmp-tabs__tabpanel").forEach(a=>{
                    const e = a.querySelectorAll("a, button");
                    a.addEventListener("keydown", t=>{
                        t.keyCode === 9 && !this.mq(this.breakpoints.grande) && (t.shiftKey ? t.target === e[0] && (t.preventDefault(),
                        e[e.length].focus()) : t.target === e[e.length - 1] && (t.preventDefault(),
                        e[0].focus()))
                    }
                    )
                }
                )
            }
            constructor(r, a) {
                super(),
                this.nav = r,
                this.header = a,
                this.initialized = !1
            }
            init() {
                this.initialized || (this.#s(),
                this.#a(),
                this.initialized = !0)
            }
            openNav() {
                const r = this.nav.querySelector(".cmp-tabs");
                if (r != null) {
                    const a = r.querySelector(".cmp-tabs__tab--active")
                      , e = r.querySelector(".cmp-tabs__tabpanel--active");
                    if (this.mq(this.breakpoints.venti) || !this.mq(this.breakpoints.grande))
                        a != null && (a.classList.remove("cmp-tabs__tab--active"),
                        a.setAttribute("aria-selected", !1)),
                        e != null && (e.classList.remove("cmp-tabs__tabpanel--active"),
                        e.removeAttribute("aria-hidden"));
                    else if (this.mq(this.breakpoints.grande)) {
                        const t = r.querySelectorAll(".cmp-tabs__tab");
                        t[0] != null && t[0].click()
                    }
                    if (this.mq(this.breakpoints.grande)) {
                        const t = this.nav.querySelector(".headerhome");
                        t?.focus()
                    }
                }
            }
        }
    }
    ,
    1925: (y,u,o)=>{
        "use strict";
        o.d(u, {
            q: ()=>r
        });
        var d = o(2605)
          , h = o(5675);
        class c {
            #e;
            #t(e) {
                const t = l=>l.textContent.trim()
                  , s = e.target.tagName === "LI" || e.target.tagName === "BUTTON" ? "button" : "link";
                let i = t(e.target.closest(".cmp-accordion__item").querySelector("button"));
                e.parent != null && (i = i + " - " + t(e.parent));
                const n = {
                    lpos: e.panel + " panel " + s,
                    lid: i,
                    linktext: t(e.target)
                };
                return s === "link" && (n.link = e.target.href),
                n
            }
            #s() {
                this.#e.querySelectorAll(".cmp-accordion__button").forEach(e=>{
                    e.addEventListener("mousedown", t=>{
                        const s = t.target.tagName === "BUTTON" ? t.target : t.target.closest(".cmp-accordion__button");
                        if (s != null && window.trackEvent) {
                            const i = {
                                target: s,
                                panel: "first"
                            };
                            window.trackEvent.event("link", this.#t(i))
                        }
                    }
                    )
                }
                )
            }
            #r() {
                this.#e.querySelectorAll(".cmp-tabs__tablist").forEach(e=>{
                    e.addEventListener("mousedown", t=>{
                        if (window.trackEvent && t.target.tagName === "LI" && t.target.classList.contains("cmp-tabs__tab")) {
                            const s = {
                                target: t.target,
                                panel: "secondary"
                            };
                            window.trackEvent.event("link", this.#t(s))
                        }
                    }
                    )
                }
                ),
                this.#e.querySelectorAll(".headercontrols + .headerhome").forEach(e=>{
                    e.addEventListener("mousedown", t=>{
                        if (window.trackEvent && (t.target.tagName === "A" || t.target.closest("a"))) {
                            const s = {
                                target: t.target.closest("a") || t.target,
                                panel: "secondary"
                            };
                            window.trackEvent.event("link", this.#t(s))
                        }
                    }
                    )
                }
                )
            }
            #a() {
                const e = t=>{
                    if (window.trackEvent && (t.target.tagName === "A" || t.target.closest("a"))) {
                        const s = t.target.closest(".cmp-tabs")
                          , i = t.target.closest(".cmp-tabs__tabpanel");
                        let n = null;
                        if (s != null && i != null) {
                            const p = "#" + i.getAttribute("aria-labelledBy");
                            n = s.querySelector(p)
                        }
                        const l = {
                            target: t.target.closest("a") || t.target,
                            panel: "tertiary",
                            parent: n
                        };
                        window.trackEvent.event("link", this.#t(l))
                    }
                }
                ;
                this.#e.querySelectorAll(".headercontrols + .headerhome + .container").forEach(t=>{
                    t.addEventListener("mousedown", e)
                }
                ),
                this.#e.querySelectorAll(".cmp-tabs__tabpanel").forEach(t=>{
                    t.addEventListener("mousedown", e)
                }
                ),
                this.#e.querySelectorAll('[id^="fw-c-corenav__"] .cds-l-grid .cds-l-grid').forEach(t=>{
                    t.addEventListener("mousedown", e)
                }
                )
            }
            init(e) {
                this.#e = e,
                e != null && (this.#s(),
                this.#r(),
                this.#a())
            }
        }
        class r extends h.b {
            header;
            siteareas;
            login;
            #e;
            constructor(e, t, s) {
                super(),
                this.context = e,
                this.header = t,
                this.siteareas = s,
                this.#e = new c
            }
            get #t() {
                return this.header.querySelector(".--search-experience") != null
            }
            #s(e) {
                return e.tagName === "BUTTON" ? e : e.closest("button")
            }
            #r() {
                return Array.from(this.header.querySelectorAll(".--active")).filter(t=>t.classList.value.indexOf("button") !== -1 && t.classList.value.indexOf("label") === -1)
            }
            #a() {
                this.header.querySelectorAll(".fw-c-header__nav-button-label").forEach(e=>{
                    e.classList.toggle("--active")
                }
                )
            }
            #i(e) {
                this.#r().forEach(s=>{
                    e !== s && (s.tagName === "BUTTON" ? s : s.querySelector("button")).click()
                }
                )
            }
            #o() {
                const e = this.header.querySelector(".fw-c-header__dropdown.--language")
                  , t = e.querySelector(".cmp-tabs")
                  , s = t.querySelector(".cmp-tabs__tab--active")
                  , i = t.querySelector(".cmp-tabs__tabpanel--active");
                if (!this.mq(this.breakpoints.medium))
                    s != null && (s.classList.remove("cmp-tabs__tab--active"),
                    s.setAttribute("aria-selected", !1)),
                    i != null && (i.classList.remove("cmp-tabs__tabpanel--active"),
                    i.removeAttribute("aria-hidden"));
                else {
                    const n = t.querySelectorAll(".cmp-tabs__tab");
                    n[0] != null && n[0].click()
                }
            }
            #n(e) {
                const t = this.header.querySelector(".cmp-accordion__panel--expanded")
                  , s = this.header.querySelector(".fw-c-header__nav-button")
                  , i = this.header.querySelector(".fw-c-header__nav.--active")
                  , n = this.context === document && e.target.closest("header") == null
                  , l = !e.composedPath().includes(this.context) && e.target.closest("header") == null;
                if (n || l)
                    if (t != null) {
                        const p = t.getAttribute("aria-labelledby");
                        if (p != null) {
                            const _ = this.header.querySelector(`#${p}`);
                            _?.click(),
                            i != null && s.click()
                        }
                    } else
                        i != null && s.click()
            }
            #c(e) {
                e.preventDefault(),
                e.stopPropagation();
                const t = this.header.querySelector(".fw-c-header__nav-button")
                  , s = this.header.querySelector(".fw-c-header__nav")
                  , i = this.header.querySelectorAll(".cmp-accordion__item");
                if (!this.mq(this.breakpoints.grande) && !s.classList.contains("--active")) {
                    const n = this.#s(e.target);
                    this.#i(n)
                }
                s.classList.contains("--active") ? s.classList.remove("--active") : s.classList.add("--active"),
                this.#a(),
                t.classList.toggle("--active"),
                i.length > 0 && i[0].querySelector(".cmp-accordion__button").focus()
            }
            #l(e) {
                const t = this.siteareas[e.id];
                t != null && (t.initialized || (t.init(),
                this.#e.init(e)),
                t.openNav())
            }
            #u(e, t) {
                const s = this.header.querySelector(".fw-c-header__nav")
                  , i = s.querySelectorAll(".cmp-accordion__button--expanded")
                  , n = t.querySelector(".cmp-accordion__button")
                  , l = t.querySelector(".cmp-accordion__panel");
                if (this.#h(l).then(p=>{
                    this.#l(t)
                }
                ),
                i.length > 0) {
                    const p = Array.from(i).filter(_=>_ !== n);
                    if (p.length > 0 && i.length > 1)
                        p.forEach(_=>{
                            _.click()
                        }
                        );
                    else if (this.mq(this.breakpoints.grande)) {
                        const _ = this.#s(e.target);
                        this.#i(_)
                    }
                } else if (this.mq(this.breakpoints.grande)) {
                    const p = this.#s(e.target);
                    this.#i(p)
                }
                this.header.querySelector(".fw-c-header__nav").classList.toggle("--sub-panel-active")
            }
            #_(e, t, s) {
                const i = this.header.querySelector(".fw-c-header__nav")
                  , n = i.querySelectorAll(".cmp-accordion__button--expanded")
                  , l = e.querySelector("button");
                if (l.ariaExpanded = l.ariaExpanded === "false",
                s.classList.contains("--active")) {
                    if (t === "--language")
                        this.#o();
                    else if (t === "--search") {
                        const _ = this.header.querySelector("[is=cdc-search]");
                        _ !== null && _.closeComponent()
                    }
                    e.classList.remove("--active"),
                    s.classList.remove("--active"),
                    this.#r().length === 0 && e.querySelector("button").focus()
                } else if (t === "--login" && !e.classList.contains("--authenticated")) {
                    const p = h.U.LOGIN_PATH.get(h.U.CLOUD_KEY)
                      , _ = h.U.LOGIN_PATH.get(h.U.WEM_KEY)
                      , m = s.querySelector(`a[href*="${p}"], a[href*="${_}"]`);
                    m && (window.location.href = m.href)
                } else {
                    !this.mq(this.breakpoints.grande) && t !== "--login" && t !== "--search" ? this.header.querySelector(".fw-c-header__nav-button").click() : n.length > 0 ? n[0].click() : t === "--search" ? s.querySelector(".fw-c-search__form-phrase").focus() : this.#i(e),
                    e.classList.toggle("--active"),
                    s.classList.toggle("--active");
                    const p = this.focusableElements(s);
                    p.length > 0 && t !== "--search" && p[0].focus()
                }
            }
            #p(e, t) {
                e.addEventListener("click", s=>{
                    const i = this.#s(s.target);
                    this.#i(i)
                }
                ),
                e.addEventListener("keydown", s=>{
                    if (s.code === "Enter" || s.code === "Space") {
                        s.preventDefault();
                        const i = this.#s(s.target);
                        this.#i(i),
                        t.focus()
                    }
                    s.code === "Tab" && !s.shiftKey && (s.preventDefault(),
                    e.click(),
                    this.accessibilityHandler(t))
                }
                )
            }
            #d() {
                this.accessibilityHandler(this.header)
            }
            #m(e) {
                const t = e.closest(".cmp-accordion__item").id
                  , s = this.siteareas[t];
                if (s != null && s.nav.querySelector(".cmp-tabs__tabpanel--active") == null) {
                    const i = s.nav.querySelectorAll(".cmp-tabs__tab");
                    i.length !== 0 && i[0].click()
                }
            }
            #f(e) {
                const t = this.header.querySelector(".fw-c-header__dropdown.--language");
                if (e.classList.contains("--close")) {
                    const s = this.header.querySelector(".fw-c-header__button.--language.--mobile button");
                    s?.click()
                } else if (e.classList.contains("--back")) {
                    const s = t.querySelector(".cmp-tabs__tabpanel--active");
                    if (s != null) {
                        const i = s.getAttribute("aria-labelledby")
                          , n = t.querySelector("#" + i);
                        n != null && (s.classList.remove("cmp-tabs__tabpanel--active"),
                        s.setAttribute("aria-hidden", !0),
                        n.classList.remove("cmp-tabs__tab--active"),
                        n.setAttribute("aria-selected", !1),
                        n.setAttribute("tabindex", "-1"),
                        n.focus())
                    }
                }
            }
            processDropdownContent(e) {
                const t = e.querySelectorAll(".cmp-tabs__tabpanel");
                this.rewriteRelativePath(e);
                for (const s of t)
                    s.removeAttribute("tabindex");
                return e
            }
            async #h(e) {
                if (e != null) {
                    const t = "fw-c-header__dropdown-content"
                      , s = e.classList.contains(t) ? e : e.querySelector("." + t);
                    if (s != null) {
                        const i = (0,
                        d.J)(s.dataset.asyncUrl);
                        if (i != null && i !== "about:blank") {
                            const n = i.replace("/jcr:content/root", ".js")
                              , l = await this.getContent(n);
                            if (l == null)
                                return !1;
                            let _ = new DOMParser().parseFromString(l, "text/html");
                            return _ = this.processDropdownContent(_),
                            s.replaceWith(_.querySelector(".cmp-container") || _.body.firstElementChild),
                            this.context.initTabs != null && this.context.initTabs(),
                            _
                        } else
                            return !1
                    }
                    return !0
                }
                return !1
            }
            #g() {
                const e = this.header.querySelector(".fw-c-header__dropdown.--language")
                  , t = e.querySelectorAll(".cmp-tabs__tabpanel")
                  , s = this.header.querySelector(".fw-c-header__button.--language button");
                e.querySelectorAll(".fw-c-header__nav-controls").forEach(n=>{
                    n.addEventListener("keydown", l=>{
                        (l.code === "Enter" || l.code === "Space") && this.#f(l.target)
                    }
                    ),
                    n.addEventListener("click", l=>{
                        const p = l.target.tagName === "BUTTON" ? l.target : l.target.closest("button");
                        p != null && this.#f(p)
                    }
                    ),
                    n.querySelector(".fw-c-header__nav-controls-label").textContent = "Country | Language"
                }
                );
                const i = h.U.locale;
                if (i.length !== 0) {
                    const n = (i[1] === "uk" ? "gb" : i[1]).toUpperCase();
                    e.querySelectorAll(".cmp-languagenavigation__item--countrycode-" + n + ".cmp-languagenavigation__item--level-0").forEach((l,p)=>{
                        if (p === 0) {
                            const _ = l.cloneNode(!0);
                            e.querySelector(".fw-c-header__language-nav-selection-target").innerHTML = _.innerHTML
                        }
                        if (l.classList.add("cmp-languagenavigation__item--selected"),
                        t.length !== 0 && t[0] === l.closest(".cmp-tabs__tabpanel")) {
                            const _ = l.cloneNode(!0)
                              , m = l.closest(".cmp-languagenavigation__group");
                            m != null && (l.remove(),
                            m.prepend(_))
                        }
                    }
                    )
                }
                this.#p(e.querySelector(".fw-c-header__dropdown-close-button"), s)
            }
            setEventListeners() {
                this.processDropdownContent(this.header);
                var e = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
                const t = this.header.querySelector(".fw-c-header__nav-button")
                  , s = this.header.querySelector(".fw-c-header__nav")
                  , i = this.header.querySelectorAll(".cmp-accordion__item")
                  , n = s.querySelectorAll(".fw-c-header__button");
                document.addEventListener("click", this.#n.bind(this)),
                t.addEventListener("click", l=>{
                    this.#c(l)
                }
                ),
                t.addEventListener("keydown", l=>{
                    if (l.code === "Enter" || l.code === "Space")
                        this.#c(l),
                        i.length > 0 && i[0].querySelector("button").focus();
                    else if (l.code === "Tab" && !l.shiftKey)
                        if (s.classList.contains("--active") && i.length > 0)
                            i[0].querySelector("button").focus();
                        else {
                            if (this.#t)
                                return;
                            this.#d()
                        }
                }
                ),
                s.addEventListener("keydown", l=>{
                    this.mq(this.breakpoints.grande) || l.code === "Escape" && t.click()
                }
                ),
                n[n.length - 1].addEventListener("keydown", l=>{
                    l.code === "Tab" && !l.shiftKey && t.focus()
                }
                ),
                i.forEach((l,p)=>{
                    const _ = l.querySelector(".cmp-accordion__title").textContent
                      , m = l.querySelector(".cmp-accordion__button")
                      , w = l.querySelector(".cmp-accordion__panel");
                    l.closest("#fw-c-header__nav-accordion--partner") || this.#h(w).then(g=>{
                        this.#l(l)
                    }
                    ),
                    m.setAttribute("data-text", _),
                    m.addEventListener("click", g=>{
                        this.#u(g, l)
                    }
                    ),
                    m.addEventListener("keydown", g=>{
                        (g.code === "Enter" || g.code === "Space") && this.#u(g, l)
                    }
                    ),
                    p === 0 && l.querySelector(".cmp-accordion__button").addEventListener("keydown", g=>{
                        this.mq(this.breakpoints.grande) || g.code === "Tab" && g.shiftKey && (g.preventDefault(),
                        t.focus())
                    }
                    )
                }
                ),
                this.header.querySelectorAll(".fw-c-header__button").forEach(l=>{
                    const p = Object.values(l.classList)
                      , _ = p.filter(g=>g.indexOf("-") === 0 && !(g.includes("mobile") || g.includes("desktop")))[0]
                      , m = this.header.querySelector(".fw-c-header__dropdown." + _)
                      , w = this.header.querySelectorAll(".fw-c-header__button");
                    if (m != null) {
                        const g = m.querySelector(".fw-c-header__dropdown-close-button")
                          , b = l.querySelector("button");
                        b?.setAttribute("aria-expanded", "false"),
                        p.includes("--mobile") && this.#h(m).then(()=>{
                            switch (_) {
                            case "--language":
                                this.#g();
                                break;
                            case "--login":
                                this.login.init();
                                break;
                            default:
                                break
                            }
                            this.updateLoginUrls()
                        }
                        ),
                        b != null && (b.addEventListener("click", this.#_.bind(this, l, _, m)),
                        b.addEventListener("keydown", E=>{
                            if (E.code === "Enter" || E.code === "Space")
                                E.preventDefault(),
                                this.#_(l, _, m);
                            else if (E.code === "Tab" && !E.shiftKey) {
                                if (this.mq(this.breakpoints.grande) && _ === "--language")
                                    if (m.classList.contains("--active")) {
                                        const f = m.querySelectorAll(".cmp-tabs__tab");
                                        f.length !== 0 && f[0].focus()
                                    } else {
                                        if (this.#t)
                                            return;
                                        E.preventDefault(),
                                        this.#d()
                                    }
                            }
                        }
                        )),
                        g != null && this.#p(g, b),
                        m.addEventListener("keydown", E=>{
                            const f = this.focusableElements(m);
                            E.code === "Tab" ? E.shiftKey ? E.target === f[0] && (E.preventDefault(),
                            b.focus()) : l === w[w.length - 1] && E.target === f[f.length - 1] && (E.preventDefault(),
                            b.click(),
                            this.#t || this.#d()) : E.code === "Escape" && _ !== "--search" && g.click()
                        }
                        )
                    }
                }
                ),
                window.addEventListener("resize", l=>{
                    const p = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth
                      , _ = s.querySelectorAll(".cmp-accordion__panel--expanded");
                    (s.classList.contains("--active") || _.length !== 0) && e !== p && (e = p,
                    this.throttle(()=>{
                        const m = _[0];
                        this.mq(this.breakpoints.venti) || (this.mq(this.breakpoints.grande) ? (m != null && this.#m(m),
                        s.classList.contains("--active") && (s.classList.remove("--active"),
                        t.classList.remove("--active"),
                        this.#a())) : m != null && !s.classList.contains("--active") && (s.classList.add("--active"),
                        t.classList.add("--active"),
                        this.#a()))
                    }
                    , 300)())
                }
                )
            }
            updateLoginUrlValues(e) {
                const t = `${window.location.pathname}${window.location.search}`;
                return {
                    login: new URL(e.getAttribute("href"),"https://www.cisco.com").pathname,
                    referer: t
                }
            }
            updateLoginUrls() {
                const e = h.U.LOGIN_PATH.get(h.U.CLOUD_KEY)
                  , t = this.header.querySelectorAll(`a[href*="${e}"]`)
                  , s = ".cisco.com"
                  , i = "www"
                  , n = `https://${i}${s}`;
                for (const l of t)
                    if (l.href !== "") {
                        const p = this.updateLoginUrlValues(l)
                          , _ = new URL(p.login,n);
                        _.searchParams.set("referer", p.referer);
                        const m = new URL(p.referer,n)
                          , w = m.hostname.endsWith(s) && !m.hostname.startsWith(i) ? _.search : decodeURIComponent(_.search);
                        l.href = `${p.login}${w}`
                    }
            }
        }
    }
    ,
    2851: (y,u,o)=>{
        "use strict";
        o.d(u, {
            R: ()=>h
        });
        var d = o(3466);
        class h extends d._ {
            async getUserInfoModule() {
                try {
                    return await o.e("ancillary/user-info/user-info").then(o.bind(o, 4390))
                } catch {
                    console.warn("[Header]: Failed to import UserInfo module."),
                    this.setUnauthenticated()
                }
            }
            async getAuthManager() {
                try {
                    return await o.e("ancillary/sso/manager").then(o.bind(o, 4503))
                } catch {
                    console.warn("[Header]: Failed to import auth manager module."),
                    this.setUnauthenticated()
                }
            }
        }
    }
    ,
    3466: (y,u,o)=>{
        "use strict";
        o.d(u, {
            _: ()=>h
        });
        var d = o(9035);
        class h {
            static #e = {
                GIVENNAME: "givenName",
                SURNAME: "sn",
                ACCESSLEVEL: "accessLevel",
                COMPANY: "company",
                MAIL: "mail"
            };
            #t;
            #s;
            #r;
            #a(r) {
                this.#s.querySelectorAll(r).forEach(a=>a.remove())
            }
            #i() {}
            #o() {
                const r = "lockicon"
                  , a = ["cds-c-static-list__item--locked", "cmp-text--locked"];
                this.#s.querySelector('.cmp-container[aria-label="login-authenticated"]').classList.add("--show");
                const e = ['.cmp-container[aria-label="login-anon"]'];
                this.#a(e),
                this.#r.forEach(t=>{
                    t.querySelectorAll(`.${r}`).forEach(s=>{
                        s.classList.remove(r)
                    }
                    ),
                    t.querySelectorAll(`.${a.join(",.")}`).forEach(s=>{
                        s.classList.remove(a)
                    }
                    )
                }
                )
            }
            #n(r) {
                return this.#t.hasOwnProperty(r) && this.#t[r].length > 0
            }
            #c() {
                const r = h.#e;
                let a, e, t = "", s = [];
                switch (this.#n(r.GIVENNAME) && (a = this.#t[r.GIVENNAME]),
                this.#n(r.SURNAME) && (e = this.#t[r.SURNAME].charAt(0)),
                a != null && e != null && (t = `${a} ${e}.`,
                this.#s.querySelectorAll(".fw-c-header__button.--login").forEach(i=>{
                    const n = i.querySelector("button .cmp-button__text");
                    i.classList.contains("--mobile") ? n.textContent = `${a.charAt(0)}${e}` : n.textContent = t
                }
                ),
                this.#s.querySelector("#profile-name-bar #user-name h4").textContent = t),
                this.#n(r.COMPANY) && (this.#s.querySelector("#profile-name-bar #company-name h4").textContent = this.#t[r.COMPANY]),
                this.#n(r.MAIL) && (this.#s.querySelector("#profile-name-bar #email-address h4").textContent = this.#t[r.MAIL]),
                this.#s.querySelectorAll(".fw-c-header__button.--login").forEach(i=>{
                    i.classList.add("--authenticated")
                }
                ),
                this.#t[r.ACCESSLEVEL]) {
                case "1":
                    s = ["#login-drop-content-customer-links", "#login-drop-content-partners-links", "#login-drop-content-employee-links"],
                    this.#a(s),
                    this.#s.querySelector("#login-drop-content-registered-guest-links").classList.add("--show"),
                    this.#o(),
                    this.#i();
                    break;
                case "2":
                    s = ["#login-drop-content-registered-guest-links", "#login-drop-content-partners-links", "#login-drop-content-employee-links"],
                    this.#a(s),
                    this.#s.querySelector("#login-drop-content-customer-links").classList.add("--show"),
                    this.#o(),
                    this.#i();
                    break;
                case "3":
                    s = ["#login-drop-content-registered-guest-links", "#login-drop-content-customer-links", "#login-drop-content-employee-links", ".fw-c-header__button.--partner", ".fw-c-header__dropdown.--partner"],
                    this.#a(s),
                    this.#s.querySelector("#login-drop-content-partners-links").classList.add("--show"),
                    this.#s.querySelector(".fw-c-header__nav").classList.add("--has-partner-accordion"),
                    this.#o();
                    break;
                case "4":
                    s = ["#login-drop-content-registered-guest-links", "#login-drop-content-customer-links", "#login-drop-content-partners-links", ".fw-c-header__button.--partner", ".fw-c-header__dropdown.--partner"],
                    this.#a(s),
                    this.#s.querySelector("#login-drop-content-employee-links").classList.add("--show"),
                    this.#s.querySelector(".fw-c-header__nav").classList.add("--has-partner-accordion"),
                    this.#o();
                    break;
                default:
                    this.setUnauthenticated();
                    break
                }
            }
            setUnauthenticated() {
                const r = ['.cmp-container[aria-label="login-authenticated"]', "#login-drop-content-registered-guest-links", "#login-drop-content-customer-links", "#login-drop-content-partners-links", "#login-drop-content-employee-links"];
                this.#a(r)
            }
            constructor(r, a) {
                this.#s = r,
                this.#r = a
            }
            async getUserInfoModule() {
                throw new Error("Method `getUserInfoModule()` must be implemented.")
            }
            async getAuthManager() {
                throw new Error("Method `getAuthManager()` must be implemented.")
            }
            async init() {
                const {oktaManager: r} = await this.getAuthManager()
                  , {authClient: a, manager: e} = await (0,
                d.ep)(r);
                if (e != null && a != null) {
                    const t = "cinf"
                      , s = {
                        serviceNames: [t]
                    }
                      , {userInfo: i} = await this.getUserInfoModule()
                      , n = await i(a)
                      , l = await n.getProfile(s);
                    l != null && l[t] != null && Object.keys(l[t]).length > 0 ? (this.#t = l[t],
                    this.#c()) : this.setUnauthenticated()
                } else
                    this.setUnauthenticated()
            }
        }
    }
    ,
    336: (y,u,o)=>{
        "use strict";
        var d = o(1925)
          , h = o(9809)
          , c = o(2851);
        let r = document.querySelector(".fw-c-header") || document.body
          , a = r.querySelectorAll(".cmp-accordion__item")
          , e = [];
        const t = i=>{
            let n = new h.$(i,r);
            e[i.id] = n
        }
        ;
        a.forEach(t);
        const s = new d.q(document,r,e);
        s.login = new c.R(r,e),
        document.addEventListener("DOMContentLoaded", async()=>{
            s.setEventListeners()
        }
        )
    }
    ,
    7454: (y,u,o)=>{
        "use strict";
        o.d(u, {
            m: ()=>h
        });
        var d = o(5675);
        class h extends d.b {
            #e = d.U.locale;
            #t = [];
            #s = "";
            #r = [];
            #a = "";
            constructor(r) {
                super(),
                this.context = r
            }
            async #i() {
                const r = this.#e[0]
                  , a = this.#e[1]
                  , e = `${d.U.origin}/content/dam/cisco-cdc/site/${a}/${r}/framework/link_indicator.json`;
                try {
                    const t = await fetch(e);
                    if (t.ok) {
                        const s = await t.json();
                        if (s != null && s.showIndicator == !0)
                            return this.#s = s.linkCountry.countryText,
                            this.#t = s.linkCountry.countryUrls,
                            this.#a = s.linkCountry.textSeparator,
                            !0
                    }
                    return !1
                } catch {
                    return !1
                }
            }
            #o(r) {
                if (r.href != null && this.#t != null && this.#s != null && this.#t.some(a=>r.href.match(new RegExp(a)))) {
                    const a = "aria-label"
                      , e = "title"
                      , t = `${this.#a} ${this.#s}`;
                    this.#a === null && (this.#a = ""),
                    r.hasAttribute(e) ? r.setAttribute(e, `${r.getAttribute(e)}${t}`) : r.setAttribute(e, this.#s),
                    r.hasAttribute(a) && r.setAttribute(a, `${r.getAttribute(a)}${t}`)
                }
            }
            #n(r) {
                this.throttle(()=>{
                    const a = r.target.closest("a") || r.target;
                    (a.tagName === "A" || a.tagName === "AREA") && (this.#r.includes(a) || (this.#r.push(a),
                    this.#o(a)))
                }
                , 300)()
            }
            async setEventListeners() {
                const r = this.#e[0]
                  , a = this.#e[1];
                !(r === "en" && a === "us") && await this.#i() && this.context.addEventListener("mousemove", this.#n.bind(this))
            }
        }
    }
    ,
    9026: (y,u,o)=>{
        "use strict";
        o.d(u, {
            G: ()=>h
        });
        var d = o(5675);
        class h extends d.b {
            #e = ".fw-c-header";
            #t(r) {
                if (r.shiftKey && r.code === "Tab") {
                    const a = this.focusableElements(document)
                      , e = a.filter(t=>t.closest(this.#e) === null && t.closest("#fw-c-skiplinks") === null);
                    if (r.target === e[0]) {
                        const t = this.focusableElements(document.querySelector(this.#e));
                        t.length > 0 && (r.preventDefault(),
                        t[t.length - 1].focus())
                    }
                }
            }
            #s(r) {
                if (r.code === "Enter" || r.code === "Space") {
                    r.preventDefault();
                    const a = document.querySelector("#fw-c-header__button--search button");
                    a?.click()
                }
            }
            setEventListeners() {
                document.querySelector("body > .responsivegrid > .aem-Grid > .responsivegrid").id = "fw-c-content",
                document.addEventListener("keydown", this.#t.bind(this));
                const r = document.querySelector("#fw-c-skiplinks__skiplink--search");
                r?.addEventListener("keydown", this.#s.bind(this))
            }
        }
    }
    ,
    5540: (y,u,o)=>{
        "use strict";
        var d = o(7454)
          , h = o(9026);
        const c = new d.m(window)
          , r = new h.G;
        document.addEventListener("DOMContentLoaded", ()=>{
            c.setEventListeners(),
            r.setEventListeners()
        }
        )
    }
    ,
    7333: ()=>{
        "use strict";
        class y {
            constructor(o, d) {
                this.lightboxSelector = o,
                this.lightboxDataAttribute = d
            }
            init() {
                setTimeout(()=>{
                    if (document.querySelectorAll(this.lightboxSelector).length && typeof activateLightboxes != "function") {
                        const o = document.querySelectorAll(`a[${this.lightboxDataAttribute}]`);
                        o && o.forEach(d=>{
                            const h = d.getAttribute(this.lightboxDataAttribute);
                            d.addEventListener("click", ()=>(window.cds.dialogShow(h),
                            !1)),
                            d.setAttribute("href", "javascript:;")
                        }
                        )
                    }
                }
                , 750)
            }
        }
        document.addEventListener("DOMContentLoaded", ()=>{
            const u = "cds-dialog"
              , o = "data-lightbox-id";
            new y(u,o).init()
        }
        )
    }
    ,
    9258: (y,u,o)=>{
        "use strict";
        o.d(u, {
            v: ()=>d
        });
        class d extends HTMLElement {
            static DELAY = 200;
            static TYPEAHEAD_RESULT_SELECTOR = "fw-c-search__typeahead-result";
            results = [];
            typeaheadUri;
            typeaheadIndex = -1;
            initialQuery = null;
            #e = null;
            #t = null;
            #s = "$RESULTSLENGTH$";
            get typeaheadUrl() {
                return this.typeaheadUri + "?query=" + this.#t
            }
            set typeaheadUrl(c) {
                const r = new RegExp("\\\\","g");
                c = c.replace(r, "\\\\"),
                this.#t = encodeURIComponent(c)
            }
            get typeaheadResults() {
                return this.results
            }
            set typeaheadResults(c) {
                this.results = c
            }
            async #r() {
                const c = this.querySelector(".fw-c-search__form-phrase").value.trim()
                  , r = await this.typeaheadFetch(c)
                  , a = this.querySelector(".fw-c-search__typeahead");
                if (this.initialQuery = c,
                r == null)
                    this.typeaheadResults = [],
                    this.querySelector(".fw-c-search__typeahead-list") != null && this.querySelector(".fw-c-search__typeahead-list").remove();
                else {
                    this.typeaheadResults = r,
                    this.querySelector(".fw-c-search__typeahead-list") != null && this.querySelector(".fw-c-search__typeahead-list").remove();
                    const e = this.typeaheadBuild();
                    e.firstElementChild && e.firstElementChild.children.length > 0 && (a.append(e),
                    this.#a("focus"))
                }
            }
            #a(c) {
                c === "focus" ? this.querySelector(".fw-c-search__typeahead-list") != null ? this.typeaheadFocus() : this.typeaheadBlur() : c === "blur" && this.typeaheadBlur()
            }
            #i(c, r, a) {
                r != null && (r.classList.remove("--" + a),
                r.setAttribute("aria-selected", !1)),
                c != null && (c.classList.add("--" + a),
                c.setAttribute("aria-selected", !0))
            }
            #o(c) {
                const r = this.querySelector(".fw-c-search__form")
                  , a = this.querySelector(".fw-c-search__form-phrase")
                  , e = this.querySelector(".fw-c-search__typeahead-list")
                  , t = this.querySelectorAll("." + d.TYPEAHEAD_RESULT_SELECTOR + "[aria-selected]")
                  , s = {};
                if (t.length > 0) {
                    let i = -1;
                    c === "ArrowDown" && (i = 1),
                    i = this.typeaheadIndex + i;
                    let n = t[i]
                      , l = Array.from(t).filter(p=>p.classList.contains("--hover"))[0];
                    c === "Home" || c === "End" ? (i = 0,
                    n = t[i],
                    c === "End" && (i = t.length - 1,
                    n = t[i]),
                    this.typeaheadIndex === -1 && r.classList.remove("--focus"),
                    s.result = this.typeaheadResults[i]) : this.typeaheadIndex === t.length - 1 ? c === "ArrowDown" ? (r.classList.add("--focus"),
                    n = null,
                    i = -1,
                    a.value = this.initialQuery,
                    s.text = this.initialQuery) : c === "ArrowUp" && (n = t[i],
                    s.result = this.typeaheadResults[i]) : this.typeaheadIndex === 0 ? c === "ArrowUp" ? (r.classList.add("--focus"),
                    s.text = this.initialQuery) : c === "ArrowDown" && (s.result = this.typeaheadResults[i]) : this.typeaheadIndex === -1 ? (c === "ArrowUp" && (i = t.length - 1,
                    n = t[i]),
                    r.classList.remove("--focus"),
                    s.result = this.typeaheadResults[i]) : s.result = this.typeaheadResults[i],
                    s.target = n,
                    s.previousTarget = l,
                    this.stepResultFocusAction(s),
                    this.#i(n, l, "hover"),
                    n != null ? a.setAttribute("aria-activedescendant", n.id) : a.setAttribute("aria-activedescendant", ""),
                    this.typeaheadIndex = i
                }
            }
            keydownHandler(c) {
                switch (c.code) {
                case "ArrowDown":
                case "ArrowUp":
                case "Home":
                case "End":
                    c.preventDefault(),
                    this.#o(c.code);
                    break;
                case "Enter":
                    c.preventDefault(),
                    c.stopPropagation(),
                    this.#a("blur"),
                    this.submitSearch(c);
                    break;
                case "Escape":
                    this.querySelector(".fw-c-search__form-phrase").value.length > 0 && (c.preventDefault(),
                    c.stopPropagation());
                    break;
                case "Tab":
                    this.typeaheadIndex !== -1 && this.searchPhraseTabAction(),
                    this.#a("blur");
                    break;
                default:
                    break
                }
            }
            #n(c) {
                switch (c.code) {
                case "Escape":
                    clearTimeout(this.#e),
                    this.#c();
                    break
                }
            }
            #c() {
                this.typeaheadIndex = -1;
                const c = this.querySelector(".fw-c-search__form-button.--clear");
                c.classList.add("--hidden"),
                c.setAttribute("aria-hidden", !0),
                this.#a("blur");
                const r = this.querySelector(".fw-c-search__typeahead .fw-c-search__typeahead-list");
                r?.remove(),
                this.typeaheadResults = [];
                const a = this.querySelector(".fw-c-search__form-phrase");
                a.value = "",
                a.setAttribute("aria-expanded", !1),
                a.focus()
            }
            #l() {
                const c = this.querySelector(".fw-c-search__form-phrase")
                  , r = this.querySelector(".fw-c-search__form-button.--clear")
                  , a = this.querySelector(".fw-c-search__typeahead");
                c.addEventListener("input", ()=>{
                    clearTimeout(this.#e),
                    this.#e = setTimeout(()=>{
                        this.#r()
                    }
                    , d.DELAY),
                    c.value.trim() != "" ? r.classList.remove("--hidden") : r.classList.add("--hidden")
                }
                ),
                c.addEventListener("keydown", this.keydownHandler.bind(this)),
                c.addEventListener("keyup", this.#n.bind(this)),
                c.addEventListener("focus", this.searchPhraseFocus.bind(this)),
                c.addEventListener("blur", this.searchPhraseBlur.bind(this)),
                r.addEventListener("click", this.#c.bind(this)),
                a.addEventListener("click", e=>{
                    if (e.target.classList.contains(d.TYPEAHEAD_RESULT_SELECTOR) || e.target.closest("." + d.TYPEAHEAD_RESULT_SELECTOR) != null) {
                        let t = e.target;
                        t.classList.contains(d.TYPEAHEAD_RESULT_SELECTOR) || (t = t.closest("." + d.TYPEAHEAD_RESULT_SELECTOR));
                        const s = parseInt(t.id.replace(/^.*?([0-9]{1,}$)/g, "$1"));
                        s >= 0 ? (this.typeaheadIndex = s,
                        this.typeaheadMetrics(),
                        this.typeaheadClick(e)) : this.#a("blur")
                    }
                }
                ),
                a.addEventListener("mousemove", e=>{
                    const t = this.querySelector("." + d.TYPEAHEAD_RESULT_SELECTOR + ".--hover");
                    t != null && (this.#i(null, t, "hover"),
                    this.typeaheadIndex = -1)
                }
                )
            }
            connectedCallback() {
                this.setEventListeners()
            }
            setEventListeners() {
                this.#l()
            }
            searchPhraseFocus(c) {
                const r = this.querySelector(".fw-c-search__form");
                this.#a(c.type),
                r.classList.add("--focus")
            }
            searchPhraseTabAction() {
                this.querySelector(".fw-c-search__form-phrase").value = this.typeaheadResults[this.typeaheadIndex].submitText
            }
            searchPhraseBlur(c) {
                const r = this.querySelector(".fw-c-search__form");
                this.#a(c.type),
                r.classList.remove("--focus")
            }
            submitSearch() {
                return !1
            }
            closeComponent() {
                this.#c(),
                this.querySelectorAll(".fw-c-search__message.--visible").forEach(c=>{
                    c.classList.remove("--visible")
                }
                )
            }
            stepResultFocusAction(c) {
                const r = this.querySelector(".fw-c-search__form-phrase");
                r.value = c.text == null ? c.result.submitText : c.text
            }
            async typeaheadFetch() {
                let c = this.querySelector(".fw-c-search__form-phrase").value.trim();
                if (c.length <= 1)
                    return this.#a("blur"),
                    null;
                this.typeaheadUrl = c;
                try {
                    const r = await fetch(this.typeaheadUrl);
                    return r.ok ? await r.json() : null
                } catch {
                    return null
                }
            }
            typeaheadBuild() {
                return null
            }
            typeaheadBlur() {
                const c = this.querySelector(".fw-c-search__message.--screenreader-text");
                c.textContent = c.dataset.screenreaderInstruction,
                this.querySelector(".fw-c-search__form-phrase").setAttribute("aria-expanded", !1),
                this.querySelector(".fw-c-search__typeahead").classList.remove("--visible")
            }
            typeaheadFocus() {
                const c = this.querySelector(".fw-c-search__message.--screenreader-text");
                this.querySelector(".fw-c-search__form-phrase").setAttribute("aria-expanded", !0),
                this.querySelector(".fw-c-search__typeahead").classList.add("--visible");
                const r = c.dataset.screenreaderAfterResult;
                r.indexOf(this.#s) !== -1 && (c.textContent = r.replace(this.#s, this.typeaheadResults.length))
            }
            typeaheadClick(c) {
                return null
            }
            typeaheadMetrics() {
                return null
            }
        }
    }
    ,
    1521: (y,u,o)=>{
        "use strict";
        o.d(u, {
            o: ()=>c
        });
        var d = o(188)
          , h = o(9258);
        class c extends h.v {
            typeaheadUri = "https://psc.cloudapps.cisco.com";
            #e = ["ar_AE", "de_DE", "en_US", "es_LA", "es_MX", "fr_CA", "it_IT", "ja_JP", "ko_KR", "nl_NL", "pt_BR", "ru_RU", "zh_CN", "zh_TW"];
            #t = {
                END_OF_LIFE: "end of life",
                END_OF_SUPPORT: "end of support"
            };
            #s = {
                TECH_PROTO_GROUP: "technologies protocol group"
            };
            #r = null;
            #a = "$QUERYSTRING$";
            #i = "$MAX$";
            #o = 250;
            get locale() {
                const a = d.U.locale
                  , e = a[0]
                  , t = a[1].toUpperCase()
                  , s = `${e}_${t}`;
                return this.#e.filter(n=>n === s)[0] || "en_US"
            }
            get typeaheadUrl() {
                return `${this.typeaheadUri}${this.#r}?locale=${this.locale}&sortParam=oneSearch`
            }
            set typeaheadUrl(a) {
                const e = new RegExp(`["'?><\\\\]`,"gim");
                this.#r = encodeURIComponent(a.replace(e, " ").trim())
            }
            get typeaheadResults() {
                return this.results
            }
            set typeaheadResults(a) {
                this.results = [],
                a != null && a.hasOwnProperty("SearchResult") && a.SearchResult.hasOwnProperty("results") && (this.results = a.SearchResult.results)
            }
            #n() {
                const a = this.querySelector("#" + this.id + "__typeahead-error-messages-template")
                  , e = a.content.cloneNode(!0)
                  , t = e.querySelector(".fw-c-search__typeahead-result-paragraph.--error")
                  , s = e.querySelector(".fw-c-search__typeahead-result-paragraph.--guidance")
                  , i = e.querySelector(".fw-c-search__typeahead-result.--error-message.--all-search")
                  , n = this.querySelector(".fw-c-search__form-phrase");
                return this.typeaheadResults.length > this.#o ? (t.textContent = t.dataset.tooManyErrorMessage.replace(this.#a, '"' + n.value + '"').replace(this.#i, this.#o),
                s.textContent = s.dataset.tooManyGuidanceMessage) : this.typeaheadResults.length === 0 && (t.textContent = t.dataset.noMatchesErrorMessage.replace(this.#a, '"' + n.value + '"'),
                s.textContent = s.dataset.noMatchesGuidanceMessage),
                i.href = i.dataset.href + encodeURIComponent(n.value),
                e
            }
            #c(a) {
                const e = a.composedPath();
                e.length > 0 && e[0].closest("[is=cdc-support-finder]") == null && this.typeaheadBlur()
            }
            connectedCallback() {
                switch (super.connectedCallback(),
                d.U.env) {
                case "dev":
                    this.typeaheadUri = "https://psc-dev.cloudapps.cisco.com";
                    break;
                case "stage":
                    this.typeaheadUri = "https://psc-stage.cloudapps.cisco.com";
                    break;
                default:
                    break
                }
                this.typeaheadUri += "/support/cwsx/pscore/service/psc/autosuggest/default/guest/"
            }
            disconnectedCallback() {
                document.removeEventListener("click", this.#c.bind(this))
            }
            setEventListeners() {
                super.setEventListeners(),
                this.querySelector(".fw-c-search__typeahead").addEventListener("keydown", e=>{
                    this.keydownHandler(e),
                    e.code === "Escape" && (this.closeComponent(),
                    e.stopPropagation(),
                    e.preventDefault())
                }
                ),
                document.addEventListener("click", this.#c.bind(this))
            }
            searchPhraseBlur(a) {
                this.querySelector(".fw-c-search__form").classList.remove("--focus")
            }
            searchPhraseTabAction() {
                return null
            }
            stepResultFocusAction(a) {
                a.text == null ? (a.target.focus(),
                this.querySelector(".fw-c-search__form-phrase").classList.add("--visible")) : this.querySelector(".fw-c-search__form-phrase").focus()
            }
            submitSearch(a) {
                a.target.tagName === "A" && a.target.click()
            }
            typeaheadBuild() {
                const a = this.querySelector("#" + this.id + "__typeahead-list-template")
                  , e = a.content.cloneNode(!0)
                  , t = this.querySelector("#" + this.id + "__typeahead-result-group-template")
                  , s = this.querySelector("#" + this.id + "__typeahead-result-anchor-template--download")
                  , i = this.querySelector("#" + this.id + "__typeahead-result-anchor-template--products")
                  , n = this.querySelector("#" + this.id + "__typeahead-result-anchor-template--products--technology")
                  , l = this.querySelector("#" + this.id + "__typeahead-result-separator-template")
                  , p = this.querySelector("#" + this.id + "__typeahead-result-indicator-template--eol")
                  , _ = this.querySelector("#" + this.id + "__typeahead-result-indicator-template--eos")
                  , m = (f,v)=>f.id.replace(/#/, v)
                  , w = f=>f != null && f != ""
                  , g = f=>{
                    let v;
                    switch (f.type) {
                    case "download":
                        v = s.content.cloneNode(!0);
                        break;
                    case "products":
                        v = i.content.cloneNode(!0);
                        break;
                    case "technology":
                        v = n.content.cloneNode(!0);
                        break;
                    default:
                        break
                    }
                    const L = v.querySelector("a")
                      , A = f.url.match(/^\/[^\/]/g) != null ? `${d.U.origin}${f.url}` : f.url;
                    return L.href = A,
                    L.id = m(L, f.index),
                    L.setAttribute("aria-label", `${f.title} ${L.textContent}`),
                    v
                }
                ;
                let b = null
                  , E = 0;
                if (this.typeaheadResults.length > this.#o || this.typeaheadResults.length === 0)
                    e.querySelector("ul").classList.add("--error-messages"),
                    e.querySelector("ul").append(this.#n());
                else
                    for (const f of this.typeaheadResults) {
                        b = t.content.cloneNode(!0).firstElementChild,
                        b.id = m(b, E);
                        const v = b.querySelector(".fw-c-search__typeahead-result-label");
                        v.textContent = f.title,
                        v.id = m(v, E);
                        const L = w(f.url)
                          , A = w(f.softwareDownloadUrl);
                        if (L) {
                            const S = f.nodeMdfMetaClass.toLocaleLowerCase() === this.#s.TECH_PROTO_GROUP ? "technology" : "products"
                              , k = {
                                url: f.url,
                                title: f.title,
                                type: S,
                                index: E
                            }
                              , C = g(k);
                            b.querySelector("span").append(C),
                            A && b.querySelector("span").append(l.content.cloneNode(!0))
                        }
                        if (A) {
                            const S = {
                                url: f.softwareDownloadUrl,
                                title: f.title,
                                type: "download",
                                index: E
                            }
                              , k = g(S);
                            b.querySelector("span").append(k)
                        }
                        if (f.lifeCycle === "eol") {
                            let S = p.content.cloneNode(!0);
                            f.displayLifeCycle && f.displayLifeCycle.toLowerCase() === this.#t.END_OF_SUPPORT && (S = _.content.cloneNode(!0)),
                            b.querySelector("span").append(S)
                        }
                        (L || A) && (e.querySelector("ul").append(b),
                        E++)
                    }
                return e
            }
        }
    }
    ,
    7678: (y,u,o)=>{
        "use strict";
        var d = o(1521);
        document.addEventListener("DOMContentLoaded", ()=>{
            window.customElements.get("cdc-support-finder") || window.customElements.define("cdc-support-finder", d.o, {
                extends: "section"
            })
        }
        )
    }
    ,
    3685: (y,u,o)=>{
        "use strict";
        o.d(u, {
            t: ()=>d
        });
        const d = h=>{
            document.readyState !== "loading" ? h() : document.addEventListener("DOMContentLoaded", h)
        }
    }
    ,
    9035: (y,u,o)=>{
        "use strict";
        o.d(u, {
            U8: ()=>c,
            ep: ()=>h
        });
        const d = r=>r instanceof Promise || r !== null && typeof r == "object" && typeof r.then == "function"
          , h = async r=>{
            let a = null
              , e = null;
            return d(r) && (e = await r,
            e && await e.isAuthenticated() && (a = e.client)),
            {
                authClient: a,
                manager: e
            }
        }
          , c = async(r,a)=>{
            const {authClient: e, manager: t} = await h(r);
            return {
                userInfo: await a(e),
                manager: t
            }
        }
    }
    ,
    6089: (y,u,o)=>{
        "use strict";
        o.r(u);
        var d = o(7982)
          , h = o(168)
          , c = o(2657)
          , r = o(9809)
          , a = o(1925)
          , e = o(2851)
          , t = o(3466)
          , s = o(7454)
          , i = o(9026)
          , n = o(1521)
          , l = o(2694)
          , p = o(8914)
          , _ = o(5447)
          , m = o(614)
          , w = o(2505)
          , g = o(9178)
          , b = o.n(g)
          , E = o(9352)
          , f = o(1134)
          , v = o(336)
          , L = o(5540)
          , A = o(7333)
          , S = o(7678)
          , k = o(8803)
          , C = o.n(k)
    }
}, y=>{
    var u = d=>y(y.s = d)
      , o = u(6089);
    (window.cdcreimagine = window.cdcreimagine || {}).homepage = o
}
]);
